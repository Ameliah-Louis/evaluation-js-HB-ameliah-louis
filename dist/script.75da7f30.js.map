{"version":3,"sources":["script.js"],"names":["$","document","ready","colorOptions","containerForm","each","color","data","css","on","Livre","titre","auteur","image","resume","_classCallCheck","_createClass","key","value","genererElementHTML","livreCard","addClass","titreElement","text","append","auteurElement","concat","panel","hide","imageElement","attr","resumeElement","deleteButton","remove","slideToggle","toggleClass","livreForm","livreListe","e","preventDefault","titreInput","auteurInput","imageInput","resumeInput","val","livre"],"mappings":"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","file":"script.75da7f30.js","sourceRoot":"..","sourcesContent":["$(document).ready(function() {\r\n  // Sélection de toutes les options de couleur\r\n  const colorOptions = $('.color-option');\r\n  // Sélection du conteneur du formulaire\r\n  const containerForm = $('.containerForm');\r\n\r\n  // Parcours de chaque option de couleur\r\n  colorOptions.each(function() {\r\n    // Récupération de la couleur à partir de l'attribut data-color\r\n    const color = $(this).data('color');\r\n    // Appliquer la couleur de fond à l'option de couleur\r\n    $(this).css('backgroundColor', color);\r\n\r\n    // Ajout d'un écouteur d'événement lors du clic sur l'option de couleur\r\n    $(this).on('click', function() {\r\n      // Changement de la couleur de fond du formulaire en fonction de la couleur choisie\r\n      containerForm.css('backgroundColor', color);\r\n    });\r\n  });\r\n\r\n  // Définition de la classe \"Livre\" pour représenter un livre et générer l'élément HTML\r\n  class Livre {\r\n    constructor(titre, auteur, image, resume) {\r\n      this.titre = titre;\r\n      this.auteur = auteur;\r\n      this.image = image;\r\n      this.resume = resume;\r\n    }\r\n\r\n    genererElementHTML() {\r\n      const livreCard = $('<div>').addClass('livre-card'); // Création d'une div pour représenter le livre\r\n\r\n      const titreElement = $('<h3>').text(this.titre); // Création d'un élément h3 pour le titre\r\n      livreCard.append(titreElement); // Ajout du titre à la div\r\n\r\n      const auteurElement = $('<p>').text(`Auteur: ${this.auteur}`); // Création d'un élément paragraphe pour l'auteur\r\n      livreCard.append(auteurElement); // Ajout de l'auteur à la div\r\n\r\n      const panel = $('<div>').addClass('panel').hide(); // Création d'un panneau (div) pour afficher l'image et le résumé (masqué par défaut)\r\n      livreCard.append(panel); // Ajout du panneau à la div\r\n\r\n      const imageElement = $('<img>').attr('src', this.image); // Création d'un élément image\r\n      panel.append(imageElement); // Ajout de l'image au panneau\r\n\r\n      const resumeElement = $('<p>').text(`Résumé: ${this.resume}`); // Création d'un élément paragraphe pour le résumé\r\n      panel.append(resumeElement); // Ajout du résumé au panneau\r\n\r\n      const deleteButton = $('<span>').addClass('delete-button').text('Supprimer');\r\n      deleteButton.on('click', function() {\r\n        livreCard.remove(); // Suppression de la carte (livre) lors du clic sur le bouton de suppression\r\n      });\r\n      livreCard.append(deleteButton); // Ajout du bouton de suppression à la div\r\n\r\n      livreCard.on('click', function() {\r\n        panel.slideToggle();\r\n        livreCard.toggleClass('panel-visible'); // Ajout/suppression de la classe pour l'indication visuelle\r\n      });\r\n\r\n      return livreCard; // Renvoi de l'élément HTML représentant le livre\r\n    }\r\n  }\r\n\r\n  // Gestion de l'ajout de livre lors de la soumission du formulaire\r\n  const livreForm = $('#livre-form');\r\n  const livreListe = $('#livre-liste');\r\n\r\n  livreForm.on('submit', function(e) {\r\n    e.preventDefault(); // Empêche l'envoi du formulaire et le rechargement de la page\r\n\r\n    // Récupération des valeurs des champs du formulaire\r\n    const titreInput = $('#titre');\r\n    const auteurInput = $('#auteur');\r\n    const imageInput = $('#image');\r\n    const resumeInput = $('#resume');\r\n\r\n    const titre = titreInput.val();\r\n    const auteur = auteurInput.val();\r\n    const image = imageInput.val();\r\n    const resume = resumeInput.val();\r\n\r\n    // Création d'un objet Livre avec les valeurs récupérées\r\n    const livre = new Livre(titre, auteur, image, resume);\r\n\r\n    // Génération de l'élément HTML représentant le livre\r\n    const livreCard = livre.genererElementHTML();\r\n\r\n    // Ajout de l'élément au conteneur des livres\r\n    livreListe.append(livreCard);\r\n\r\n    // Vidage des champs du formulaire\r\n    titreInput.val('');\r\n    auteurInput.val('');\r\n    imageInput.val('');\r\n    resumeInput.val('');\r\n  });\r\n});\r\n"]}